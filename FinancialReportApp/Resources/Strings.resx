<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ClearCustomTaxUI_MenuAttribute" xml:space="preserve">
    <value>Clear custom tax brackets.</value>
  </data>
  <data name="ClearCustomTaxUI_Prompt" xml:space="preserve">
    <value>Are you sure you want to clear all custom tax brackets?</value>
  </data>
  <data name="ClearTaxCreditsUI_MenuAttribute" xml:space="preserve">
    <value>Clear tax credits.</value>
  </data>
  <data name="ClearTaxCreditsUI_Prompt" xml:space="preserve">
    <value>Are you sure you want to clear all tax credits?</value>
  </data>
  <data name="InputCustomTaxUI_Menu" xml:space="preserve">
    <value>Input custom tax brackets.</value>
  </data>
  <data name="InputExpenseItem_Menu" xml:space="preserve">
    <value>Input expense item.</value>
  </data>
  <data name="InputExpenseItem_Prompt_Category" xml:space="preserve">
    <value>Enter expense category: </value>
  </data>
  <data name="InputExpenseItem_Prompt_Frequency" xml:space="preserve">
    <value>Enter expense frequency (e.g., Monthly, Weekly): </value>
  </data>
  <data name="InputTaxCreditUI_Menu" xml:space="preserve">
    <value>Input tax credits.</value>
  </data>
  <data name="InputSalaryMenu_Menu" xml:space="preserve">
    <value>Input Salary.</value>
  </data>
  <data name="InputSalaryMenu_Message_Start" xml:space="preserve">
    <value>Input Salary Menu - Please select an option:</value>
  </data>
  <data name="InputTaxCreditUI_Prompt_Amount" xml:space="preserve">
    <value>Input tax credit/deductible: </value>
  </data>
  <data name="Menu_Message_Back" xml:space="preserve">
    <value>Back.</value>
  </data>
  <data name="Menu_Message_Exit" xml:space="preserve">
    <value>Exit.</value>
  </data>
  <data name="Menu_Message_Start" xml:space="preserve">
    <value>Please select an option:</value>
  </data>
  <data name="Menu_Message_MenuOption" xml:space="preserve">
    <value>{0}. {1}</value>
  </data>
  <data name="Menu_Message_End" xml:space="preserve">
    <value>Option: </value>
  </data>
  <data name="Menu_Message_Error" xml:space="preserve">
    <value>Invalid option number.</value>
  </data>
  <data name="RemoveExpenseItemUI_Menu" xml:space="preserve">
    <value>Remove expense item</value>
  </data>
  <data name="MainMenu_Menu" xml:space="preserve">
    <value>Main menu</value>
  </data>
  <data name="MainMenu_Message_Start" xml:space="preserve">
    <value>Please select an option:</value>
  </data>
  <data name="RemoveExpenseItemUI_Message_Nothing" xml:space="preserve">
    <value>No expenses to remove.</value>
  </data>
  <data name="RemoveExpenseItemUI_Message_Removed" xml:space="preserve">
    <value>Expense removed.</value>
  </data>
  <data name="RemoveExpenseItemUI_Prompt_Number" xml:space="preserve">
    <value>Enter the number of the expense to remove: </value>
  </data>
  <data name="RemoveTaxCreditUI_Menu" xml:space="preserve">
    <value>Remove tax credit</value>
  </data>
  <data name="RemoveTaxCreditUI_Prompt_Number" xml:space="preserve">
    <value>Enter the number of the credits to remove: </value>
  </data>
  <data name="ReportUI_Menu" xml:space="preserve">
    <value>Generate Report.</value>
  </data>
  <data name="ReportUI_Prompt_Write" xml:space="preserve">
    <value>Would you like to write the report to a file?</value>
  </data>
  <data name="SalaryAfterTaxUI_Menu" xml:space="preserve">
    <value>Input salary after tax</value>
  </data>
  <data name="SalaryAfterTaxUI_Message_Tax" xml:space="preserve">
    <value>Enter the amount of tax paid: </value>
  </data>
  <data name="SalaryBeforeTaxUI_Menu" xml:space="preserve">
    <value>Input salary before tax.</value>
  </data>
  <data name="SalaryBeforeTaxUI_Message_Salary" xml:space="preserve">
    <value>Enter your salary before tax: </value>
  </data>
  <data name="SalaryFrequencyMenu_Menu" xml:space="preserve">
    <value>Select Salary Frequency.</value>
  </data>
  <data name="SalaryFrequencyMenu_Message_Start" xml:space="preserve">
    <value>Select Salary Frequency:</value>
  </data>
  <data name="TaxCreditMenu_Menu" xml:space="preserve">
    <value>Input tax credits.</value>
  </data>
  <data name="TaxCreditMenu_Message_Start" xml:space="preserve">
    <value>Tax Credit Menu - Please select an option:</value>
  </data>
  <data name="ViewCustomTaxUI_Menu" xml:space="preserve">
    <value>View custom tax brackets.</value>
  </data>
  <data name="ViewCustomTaxUI_Message_Bracket" xml:space="preserve">
    <value>Range: {0} - {1}. Rate: {2}</value>
  </data>
  <data name="ViewExpensesUI_Menu" xml:space="preserve">
    <value>View all expenses.</value>
  </data>
  <data name="ViewExpensesUI_Message_Empty" xml:space="preserve">
    <value>No expenses recorded.</value>
  </data>
  <data name="ViewExpensesUI_Message_Expense" xml:space="preserve">
    <value>{0} - {1} ({2})</value>
  </data>
  <data name="ViewTaxCreditsUI_Menu" xml:space="preserve">
    <value>View All Tax Credits.</value>
  </data>
  <data name="ViewTaxCreditsUI_Message_Total" xml:space="preserve">
    <value>Total Tax Credits: {0:C}</value>
  </data>
  <data name="InputCustomTaxMenu_Menu" xml:space="preserve">
    <value>Input custom tax brackets.</value>
  </data>
  <data name="InputCustomTaxMenu_Message_Start" xml:space="preserve">
    <value>Input Custom Tax Brackets Menu.</value>
  </data>
  <data name="ViewTaxCreditsUI_Message_Credit" xml:space="preserve">
    <value> - {0:C}</value>
  </data>
  <data name="ViewExpensesUI_Message_Current" xml:space="preserve">
    <value>Current Expenses:</value>
  </data>
  <data name="SalaryAfterTaxUI_Message_Salary" xml:space="preserve">
    <value>Enter your salary after tax: </value>
  </data>
  <data name="ReportUI_Message_Failure" xml:space="preserve">
    <value>Failed to write report to {0}</value>
  </data>
  <data name="ReportUI_Message_Success" xml:space="preserve">
    <value>"Report written to {0}"</value>
  </data>
  <data name="RemoveTaxCreditUI_Message_Removed" xml:space="preserve">
    <value>Credit removed.</value>
  </data>
  <data name="RemoveTaxCreditUI_Message_Nothing" xml:space="preserve">
    <value>No credits to remove.</value>
  </data>
  <data name="RemoveTaxCreditUI_Message_Invalid" xml:space="preserve">
    <value>Invalid index.</value>
  </data>
  <data name="RemoveTaxCreditUI_Message_Current" xml:space="preserve">
    <value>Current credits:</value>
  </data>
  <data name="RemoveExpenseItemUI_Message_Invalid" xml:space="preserve">
    <value>Invalid index.</value>
  </data>
  <data name="RemoveExpenseItemUI_Message_Current" xml:space="preserve">
    <value>Current Expenses:</value>
  </data>
  <data name="InputExpenseItem_Prompt_Amount" xml:space="preserve">
    <value>Enter expense amount: </value>
  </data>
  <data name="InputCustomTaxUI_Message_Lower" xml:space="preserve">
    <value>Custom Tax Bracket starting point: {0}</value>
  </data>
  <data name="InputCustomTaxUI_Message_Upper" xml:space="preserve">
    <value>Enter upper boundary (or leave blank for no upper limit): </value>
  </data>
  <data name="InputCustomTaxUI_Message_End" xml:space="preserve">
    <value>The last tax bracket has no upper limit. Unable to add more brackets.</value>
  </data>
  <data name="InputCustomTaxUI_Message_Rate" xml:space="preserve">
    <value>Enter tax rate (as a percentage): </value>
  </data>
  <data name="ClearTaxCreditsUI_Message_Cleared" xml:space="preserve">
    <value>All tax credits cleared.</value>
  </data>
  <data name="ClearTaxCreditsUI_Message_Cancelled" xml:space="preserve">
    <value>Tax credits not cleared.</value>
  </data>
  <data name="InputExpensesMenu_Menu" xml:space="preserve">
    <value>Input expenses.</value>
  </data>
  <data name="InputExpensesMenu_Message_Start" xml:space="preserve">
    <value>Input Expenses Menu - Please select an option:</value>
  </data>
  <data name="ClearCustomTaxUI_Message_Cleared" xml:space="preserve">
    <value>Custom tax brackets cleared.</value>
  </data>
  <data name="ClearCustomTaxUI_Message_Cancelled" xml:space="preserve">
    <value>Clear operation cancelled.</value>
  </data>
  <data name="MainMenu_Message_Error" xml:space="preserve">
    <value>Invalid option number.</value>
  </data>
  <data name="MainMenu_Message_End" xml:space="preserve">
    <value>Option: </value>
  </data>
</root>